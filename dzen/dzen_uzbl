#!/bin/bash
#
# Original dget.sh script:
# (c) 2007 by Robert Manea
#
# bashtardized and heavily modded for uzbl:
# 2009 by pbrisbin
#
# requires:
#           dzen2
#           gdbar
#           wget
#           xwininfo
#           wmctrl (for now)
#
###
# dzen
FONT='-xos4-terminus-*-*-*-*-12-*-*-*-*-*-*-*'
# xft font available with dzen2-svn from aur
#FONT='Verdana-8'
FG='#606060'
BG='#303030'
# gdbar
bar_FG='#909090'
bar_BG='#606060'
bar_H=7
bar_W=150

# the place to download to
DIR="$HOME/Downloads"

# refresh rate on progress
SECS=1

# this allows for some simple WM-specific adjustments
pad_Y=30
pad_X=2

# these are passed in from uzbl
PID="$2"
XID="$3"
URL="$8"

# auto open the file post-download based on the
# file's extension; filename is derived from the
# originating URL and you should edit this to your
# needs
open() {
  case "$1" in
    *.pdf) epdfview "$1" & ;;
    *.txt) urxvtc -e vim "$1" &  ;;
    *.jpg|*.png|*.jpeg) mirage "$1" & ;;
    *.mov|*.avi|*.mpeg|*.mpg) mplayer "$1" & ;;
    *) : ;;
  esac
}

# this function returns XY geometry for the spawning uzbl
find_uzbl() {
  # x-winid is coming over blank for me
  # wmctrl provides a workaround
  [ "$XID" = "" ] && XID="$(wmctrl -lp | awk "/$PID/"'{print $1}')"
  
# someone better with awk could probably parse this all at once
  uzbl_X=$(xwininfo -id "$XID" | awk '/Corners/ {print $2}' | cut -d '+' -f 2)
  uzbl_Y=$(xwininfo -id "$XID" | awk '/Corners/ {print $2}' | cut -d '+' -f 3)
  uzbl_W=$(xwininfo -id "$XID" | awk '/Width/   {print $2}')
  uzbl_H=$(xwininfo -id "$XID" | awk '/Height/  {print $2}')
# some math here to place the first progress bar just above
  # the uzbl status bar
  H=16
  W=$uzbl_W
  X=$((uzbl_X+pad_X))
  Y=$((uzbl_Y+uzbl_H-pad_Y))
}

# file to dump wget progress into and read from
# it needs to be specific to this DL instance
STAT="/tmp/dl_progress.$$"

# this file holds the HW and XY to use for the next
# download instance and must span across each download
LOC="/tmp/dl_location"

# if no other wgets are running, we clear the stored
# location.  this is the best way i can determine if
# this is a new 'downloading session' and we need to
# start over at the bottom of the stack
ps -A | grep -q wget || rm -f $LOC

# and if the location file still exists we source it
# to know where to place the next status bar, else
# we find uzbl
[ -f $LOC ] && . $LOC || find_uzbl

# set up the location of the next display
new_Y=$((Y-H))
echo -e "H=$H\nW=$W\nX=$X\nY=$new_Y\n" > $LOC

# download
FILE="$(echo $URL | awk -F '/' '{print $NF}')"

wget -O "$DIR/$FILE" --user-agent=Firefox "$URL" > $STAT 2>&1 &
pid=$!

# notify
(while ps -A | grep -q $pid; do
  REM="$(awk '/s$/ {print $NF}' $STAT | tail -n1)"
  echo -n "  Downloading $FILE (${REM:-unknown})...  "
  PROG=$(grep -Eo  " [0-9]{1,3}%" $STAT | tail -n1 | sed 's/%$//g')
  echo "${PROG:-0} 100" | gdbar -h $bar_H -w $bar_W -fg $bar_FG -bg $bar_BG
  sleep "$SECS"
done; echo "  Download finished."; sleep 3) | dzen2 -ta l -w $W -h $H -x $X -y $Y -fg $FG -bg $BG -fn "$FONT" -e "button3=exec:kill $pid,rm -f $STAT,exit"
rm -f "$STAT"
# auto-open
open "$DIR/$FILE"
exit 0
